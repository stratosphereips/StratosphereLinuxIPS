name: integration-tests

on:
  pull_request:
    branches:
      - 'master'
      - 'develop'

jobs:
  # uses the common workflow that builds slips
  install-dependencies-using-reusable-workflow:
    uses: ./.github/workflows/install-slips-dependencies.yml


  integration-tests:
    runs-on: ubuntu-22.04
    timeout-minutes: 1800
    # make this job depend on the first job
    needs: install-dependencies-using-reusable-workflow

    # suppress tensorflow warnings
    env:
      TF_CPP_MIN_LOG_LEVEL: 3
      TF_ENABLE_ONEDNN_OPTS: 0

    strategy:
      matrix:
        test_file:
          - test_config_files.py
          - test_portscans.py
          - test_dataset.py
          - test_pcap_dataset.py
          - test_zeek_dataset.py

    steps:
    - uses: actions/checkout@v4
      with:
        ref: ${{ github.ref }}
        fetch-depth: ''

    - name: Restore Zeek Build from Cache
      id: zeek-cache
      uses: actions/cache@v4
      with:
        path: /opt/zeek
        key: zeek-cache

    - name: Restore APT cache
      id: apt-cache
      uses: actions/cache@v4
      with:
        path: |
          /var/cache/apt/archives
          /var/lib/apt/lists
        key: apt-cache

    - name: Install Zeek
      run: |
        sudo echo 'deb http://download.opensuse.org/repositories/security:/zeek/xUbuntu_22.04/ /' | sudo tee /etc/apt/sources.list.d/security:zeek.list
        curl -fsSL https://download.opensuse.org/repositories/security:zeek/xUbuntu_22.04/Release.key | gpg --dearmor | sudo tee /etc/apt/trusted.gpg.d/security_zeek.gpg > /dev/null
        sudo apt update && sudo apt install -y --no-install-recommends --fix-missing zeek
        sudo ln -s /opt/zeek/bin/zeek /usr/local/bin/bro


    - name: Install apt dependencies (from cache if possible)
      run: |
        sudo apt-get update
        sudo apt-get install -y $(cat install/apt_dependencies.txt)

    - name: Install Python dependencies (from cache if possible)
      run: |
        python3 -m pip install --upgrade pip
        python3 -m pip install -r install/requirements.txt



    - name: Start redis server
      run: redis-server --daemonize yes

    - name: Print zeek version
      run: (command -v zeek && zeek --version) || (command -v bro && bro --version)


    - name: Run Integration Tests for ${{ matrix.test_file }}
      run: |
        python3 -m pytest tests/integration_tests/${{ matrix.test_file }} -p no:warnings -vv -s -n 3

    - name: Upload Artifacts
      if: success() || failure()
      uses: actions/upload-artifact@v4
      with:
        name: test_slips_locally-integration-tests-output
        path: |
          output/integration_tests
